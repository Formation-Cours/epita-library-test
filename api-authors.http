### Configuration des variables

@baseUrl = https://library.olprog-formation.fr
@contentType = application/json


### Author Controller - API Tests


### 1. Create a new author

POST {{baseUrl}}/api/authors HTTP/1.1
Content-Type: {{contentType}}

{
  "biography": "French poet, novelist, and dramatist of the Romantic movement",
  "birthDate": "1802-02-26",
  "email": "victor.hugo@example.com",
  "name": "Victor Hugo"
}


### 2. Create another author for testing

POST {{baseUrl}}/api/authors HTTP/1.1
Content-Type: {{contentType}}

{
  "biography": "French novelist, critic, and essayist best known for his novel In Search of Lost Time",
  "birthDate": "1871-07-10",
  "email": "marcel.proust@example.com",
  "name": "Marcel Proust"
}


### 3. Get all authors

GET {{baseUrl}}/api/authors HTTP/1.1


### 4. Get author by ID

GET {{baseUrl}}/api/authors/1 HTTP/1.1


### 5. Get author by email

GET {{baseUrl}}/api/authors/email/victor.hugo@example.com HTTP/1.1


### 6. Search authors by name

GET {{baseUrl}}/api/authors/search?name=victor HTTP/1.1


### 7. Get authors by birth date range

GET {{baseUrl}}/api/authors/birthdate?startDate=1800-01-01&endDate=1850-12-31 HTTP/1.1


### 8. Get authors by genre

GET {{baseUrl}}/api/authors/genre/Romance HTTP/1.1


### 9. Update an author

PUT {{baseUrl}}/api/authors/1 HTTP/1.1
Content-Type: {{contentType}}

{
  "biography": "French poet, novelist, and dramatist of the Romantic movement. Author of Les Mis√©rables and The Hunchback of Notre-Dame",
  "birthDate": "1802-02-26",
  "email": "victor.hugo@example.com",
  "name": "Victor Hugo"
}


### 10. Delete an author

DELETE {{baseUrl}}/api/authors/2 HTTP/1.1


### Test cases with invalid data


### 11. Create author with invalid email

POST {{baseUrl}}/api/authors HTTP/1.1
Content-Type: {{contentType}}

{
  "biography": "Test biography",
  "birthDate": "1990-01-01",
  "email": "invalid-email",
  "name": "Test Author"
}


### 12. Create author with name too short

POST {{baseUrl}}/api/authors HTTP/1.1
Content-Type: {{contentType}}

{
  "biography": "Test biography",
  "birthDate": "1990-01-01",
  "email": "test@example.com",
  "name": "A"
}


### 13. Create author with biography too long

POST {{baseUrl}}/api/authors HTTP/1.1
Content-Type: {{contentType}}

{
  "biography": "This is a very long biography that exceeds the maximum allowed length of 500 characters. Lorem ipsum dolor sit amet, consectetur adipiscing elit. Sed do eiusmod tempor incididunt ut labore et dolore magna aliqua. Ut enim ad minim veniam, quis nostrud exercitation ullamco laboris nisi ut aliquip ex ea commodo consequat. Duis aute irure dolor in reprehenderit in voluptate velit esse cillum dolore eu fugiat nulla pariatur. Excepteur sint occaecat cupidatat non proident, sunt in culpa qui officia deserunt mollit anim id est laborum. Sed ut perspiciatis unde omnis iste natus error sit voluptatem accusantium doloremque laudantium.",
  "birthDate": "1990-01-01",
  "email": "test@example.com",
  "name": "Test Author"
}


### 14. Get non-existent author

GET {{baseUrl}}/api/authors/999 HTTP/1.1


### 15. Update non-existent author

PUT {{baseUrl}}/api/authors/999 HTTP/1.1
Content-Type: {{contentType}}

{
  "biography": "This author does not exist",
  "birthDate": "1990-01-01",
  "email": "nonexistent@example.com",
  "name": "Non Existent"
}


### 16. Delete non-existent author

DELETE {{baseUrl}}/api/authors/999 HTTP/1.1
